"""
Django settings for glassbox_api project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os.path
import os
import sys

from glassbox_api.aws_sm import get_secrets



PROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-_nnnfyfg*sl@e(^-9&7s@*0r7(6!oq(t4pe=t*d-o2h)!sm7t^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
secrets = get_secrets()


ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.sites",
    'corsheaders',
    "django.contrib.staticfiles",
    "rest_framework",
    'rest_framework.schemas',
    "rest_framework.authtoken",
    "dj_rest_auth",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "dj_rest_auth.registration",
    "api",
    "users",
    "payment_gateway",

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
}
ROOT_URLCONF = "glassbox_api.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR,'static')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'glassbox_cache',
    }
}
ACCOUNT_EMAIL_VERIFICATION = 'none'
WSGI_APPLICATION = "glassbox_api.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

MASTER_INDIA_CLIENT_ID = secrets.get('master_india_client_id', 'PnHungvfQRSGRBZbeK')
MASTER_INDIA_CLIENT_TOKEN = secrets.get('master_india_client_token','5743748659373f33e7d49831a11143f70fa8f97c')


DATABASES = {
    'default': {
        'ENGINE': secrets['ENGINE'],
        'NAME': secrets['NAME'],
        'USER': secrets['USER'],
        'PASSWORD': secrets['PASSWORD'],
        'HOST': secrets['HOST'],
        'PORT': secrets['PORT'],



    }
}
ACCOUNT_USERNAME_REQUIRED = False
# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USER_MODEL_USERNAME_FIELD = "pan_number"
AUTH_USER_MODEL = 'users.User'
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

# TIME_ZONE = "UTC"
#
# USE_I18N = True
#
# USE_TZ = True



TIME_ZONE =  'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
STATIC_URL = '/static/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
SITE_ID = 1
CORS_ORIGIN_ALLOW_ALL = True
INCLUDE_REGISTER_URL = True
INCLUDE_AUTH_URLS = True
OLD_PASSWORD_FIELD_ENABLED = True
PASSWORD_RESET_TIMEOUT_DAYS = 1


REST_AUTH = {
    'TOKEN_SERIALIZER': 'users.serializers.UserTokenSerializer',
    'REGISTER_SERIALIZER': 'users.serializers.UserRegisterSerializer',
    'LOGIN_SERIALIZER': 'users.serializers.CustomLoginSerializer',
    # 'PASSWORD_RESET_SERIALIZER' :'users.serializers.PasswordResetCustomSerializer'
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.AllowAllUsersModelBackend'
]
#'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_PORT = 25
EMAIL_USE_TLS = True
EMAIL_HOST = secrets['EMAIL_HOST']
EMAIL_HOST_USER = secrets['EMAIL_HOST_USER']
DEFAULT_FROM_EMAIL = secrets['DEFAULT_FROM_EMAIL']
EMAIL_HOST_PASSWORD = secrets['EMAIL_HOST_PASSWORD']


#razorpay

RAZORPAY_KEY_ID= os.environ.get("RAZORPAY_KEY_ID")
RAZORPAY_KEY_SECRET= os.environ.get("RAZORPAY_KEY_SECRET")
